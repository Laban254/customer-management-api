name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - "README.md"
      - ".github/workflows/**"

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      AFRICAS_TALKING_USERNAME: ${{ secrets.AFRICAS_TALKING_USERNAME }}
      AFRICAS_TALKING_API_KEY: ${{ secrets.AFRICAS_TALKING_API_KEY }}
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost  
      DATABASE_PORT: 5432

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL to be ready..."
          sleep 2
        done

    - name: Make and apply migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Apply migrations to test database
      run: |
        python manage.py migrate --database=test

    - name: Run pytest tests
      run: |
        pytest -v --reuse-db --maxfail=1 --disable-warnings