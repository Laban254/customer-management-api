events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream web {
        server web:8000; 
    }

    server {
        listen 80;
        server_name savannah-informatics.mooo.com 3.208.71.116;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name savannah-informatics.mooo.com;

        ssl_certificate /etc/letsencrypt/live/savannah-informatics.mooo.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/savannah-informatics.mooo.com/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location /static/ {
            alias /app/staticfiles/;
        }

        location /media/ {
            alias /app/media/;
        }

        location / {
            proxy_pass http://web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve live logs with Lua
        location /logs {
            default_type text/plain;  # Set content type to plain text

            # Lua block to read the last 50 lines of the log file
            content_by_lua_block {
                local log_file_path = "/app/logs/~myAppLogs.log"  -- Path to your log file

                local file = io.open(log_file_path, "r")  -- Open the log file for reading
                if not file then
                    ngx.say("Log file not found.")  -- Handle case where file does not exist
                    return
                end

                local lines = {}  -- Table to store lines from the log file
                for line in file:lines() do
                    table.insert(lines, line)  -- Add each line to the table
                end
                file:close()  -- Close the file

                -- Get the last 50 lines or all if less than 50
                local num_lines = #lines
                local start_line = num_lines > 50 and (num_lines - 49) or 1

                for i = start_line, num_lines do
                    ngx.say(lines[i])  -- Output the last 50 lines
                end
            }
        }

        access_log /var/log/nginx/mydjangoapp_access.log;
        error_log /var/log/nginx/mydjangoapp_error.log;

        error_page 404 /404.html;
        location = /404.html {
            internal;
        }
    }
}